<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szdeepwise.bydtcmonitor.mapper.SceneMytcOpenDatasetMapper" >
  <resultMap id="BaseResultMap" type="com.szdeepwise.bydtcmonitor.entity.SceneMytcOpenDataset" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_id" property="employeeId" jdbcType="VARCHAR" />
    <result column="employee_group" property="employeeGroup" jdbcType="VARCHAR" />
    <result column="employee_role" property="employeeRole" jdbcType="VARCHAR" />
    <result column="employee_project" property="employeeProject" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="operation_time" property="operationTime" jdbcType="INTEGER" />
    <result column="action_begin_time" property="actionBeginTime" jdbcType="TIMESTAMP" />
    <result column="action_end_time" property="actionEndTime" jdbcType="TIMESTAMP" />
    <result column="host_name" property="hostName" jdbcType="VARCHAR" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="client_server_TTL" property="clientServerTtl" jdbcType="VARCHAR" />
    <result column="client_server_delay" property="clientServerDelay" jdbcType="VARCHAR" />
    <result column="dataset_name" property="datasetName" jdbcType="VARCHAR" />
    <result column="dataset_type" property="datasetType" jdbcType="VARCHAR" />
    <result column="container_name" property="containerName" jdbcType="VARCHAR" />
    <result column="container_type" property="containerType" jdbcType="VARCHAR" />
    <result column="container_id" property="containerId" jdbcType="VARCHAR" />
    <result column="container_version" property="containerVersion" jdbcType="VARCHAR" />
    <result column="owning_company" property="owningCompany" jdbcType="VARCHAR" />
    <result column="owning_group" property="owningGroup" jdbcType="VARCHAR" />
    <result column="owning_user" property="owningUser" jdbcType="VARCHAR" />
    <result column="cross_company_view" property="crossCompanyView" jdbcType="VARCHAR" />
    <result column="cross_department_view" property="crossDepartmentView" jdbcType="VARCHAR" />
    <result column="secret_file_view" property="secretFileView" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, employee_name, employee_id, employee_group, employee_role, employee_project, 
    company, operation_time, action_begin_time, action_end_time, host_name, IP, user_id, 
    client_server_TTL, client_server_delay, dataset_name, dataset_type, container_name, 
    container_type, container_id, container_version, owning_company, owning_group, owning_user, 
    cross_company_view, cross_department_view, secret_file_view
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from scene_mytc_open_dataset
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from scene_mytc_open_dataset
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.szdeepwise.bydtcmonitor.entity.SceneMytcOpenDataset" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scene_mytc_open_dataset (employee_name, employee_id, employee_group, 
      employee_role, employee_project, company, 
      operation_time, action_begin_time, action_end_time, 
      host_name, IP, user_id, 
      client_server_TTL, client_server_delay, dataset_name, 
      dataset_type, container_name, container_type, 
      container_id, container_version, owning_company, 
      owning_group, owning_user, cross_company_view, 
      cross_department_view, secret_file_view)
    values (#{employeeName,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR}, #{employeeGroup,jdbcType=VARCHAR}, 
      #{employeeRole,jdbcType=VARCHAR}, #{employeeProject,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{operationTime,jdbcType=INTEGER}, #{actionBeginTime,jdbcType=TIMESTAMP}, #{actionEndTime,jdbcType=TIMESTAMP}, 
      #{hostName,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{clientServerTtl,jdbcType=VARCHAR}, #{clientServerDelay,jdbcType=VARCHAR}, #{datasetName,jdbcType=VARCHAR}, 
      #{datasetType,jdbcType=VARCHAR}, #{containerName,jdbcType=VARCHAR}, #{containerType,jdbcType=VARCHAR}, 
      #{containerId,jdbcType=VARCHAR}, #{containerVersion,jdbcType=VARCHAR}, #{owningCompany,jdbcType=VARCHAR}, 
      #{owningGroup,jdbcType=VARCHAR}, #{owningUser,jdbcType=VARCHAR}, #{crossCompanyView,jdbcType=VARCHAR}, 
      #{crossDepartmentView,jdbcType=VARCHAR}, #{secretFileView,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szdeepwise.bydtcmonitor.entity.SceneMytcOpenDataset" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scene_mytc_open_dataset
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="employeeGroup != null" >
        employee_group,
      </if>
      <if test="employeeRole != null" >
        employee_role,
      </if>
      <if test="employeeProject != null" >
        employee_project,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="operationTime != null" >
        operation_time,
      </if>
      <if test="actionBeginTime != null" >
        action_begin_time,
      </if>
      <if test="actionEndTime != null" >
        action_end_time,
      </if>
      <if test="hostName != null" >
        host_name,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="clientServerTtl != null" >
        client_server_TTL,
      </if>
      <if test="clientServerDelay != null" >
        client_server_delay,
      </if>
      <if test="datasetName != null" >
        dataset_name,
      </if>
      <if test="datasetType != null" >
        dataset_type,
      </if>
      <if test="containerName != null" >
        container_name,
      </if>
      <if test="containerType != null" >
        container_type,
      </if>
      <if test="containerId != null" >
        container_id,
      </if>
      <if test="containerVersion != null" >
        container_version,
      </if>
      <if test="owningCompany != null" >
        owning_company,
      </if>
      <if test="owningGroup != null" >
        owning_group,
      </if>
      <if test="owningUser != null" >
        owning_user,
      </if>
      <if test="crossCompanyView != null" >
        cross_company_view,
      </if>
      <if test="crossDepartmentView != null" >
        cross_department_view,
      </if>
      <if test="secretFileView != null" >
        secret_file_view,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="employeeGroup != null" >
        #{employeeGroup,jdbcType=VARCHAR},
      </if>
      <if test="employeeRole != null" >
        #{employeeRole,jdbcType=VARCHAR},
      </if>
      <if test="employeeProject != null" >
        #{employeeProject,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=INTEGER},
      </if>
      <if test="actionBeginTime != null" >
        #{actionBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionEndTime != null" >
        #{actionEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hostName != null" >
        #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="clientServerTtl != null" >
        #{clientServerTtl,jdbcType=VARCHAR},
      </if>
      <if test="clientServerDelay != null" >
        #{clientServerDelay,jdbcType=VARCHAR},
      </if>
      <if test="datasetName != null" >
        #{datasetName,jdbcType=VARCHAR},
      </if>
      <if test="datasetType != null" >
        #{datasetType,jdbcType=VARCHAR},
      </if>
      <if test="containerName != null" >
        #{containerName,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null" >
        #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="containerId != null" >
        #{containerId,jdbcType=VARCHAR},
      </if>
      <if test="containerVersion != null" >
        #{containerVersion,jdbcType=VARCHAR},
      </if>
      <if test="owningCompany != null" >
        #{owningCompany,jdbcType=VARCHAR},
      </if>
      <if test="owningGroup != null" >
        #{owningGroup,jdbcType=VARCHAR},
      </if>
      <if test="owningUser != null" >
        #{owningUser,jdbcType=VARCHAR},
      </if>
      <if test="crossCompanyView != null" >
        #{crossCompanyView,jdbcType=VARCHAR},
      </if>
      <if test="crossDepartmentView != null" >
        #{crossDepartmentView,jdbcType=VARCHAR},
      </if>
      <if test="secretFileView != null" >
        #{secretFileView,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szdeepwise.bydtcmonitor.entity.SceneMytcOpenDataset" >
    update scene_mytc_open_dataset
    <set >
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="employeeGroup != null" >
        employee_group = #{employeeGroup,jdbcType=VARCHAR},
      </if>
      <if test="employeeRole != null" >
        employee_role = #{employeeRole,jdbcType=VARCHAR},
      </if>
      <if test="employeeProject != null" >
        employee_project = #{employeeProject,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        operation_time = #{operationTime,jdbcType=INTEGER},
      </if>
      <if test="actionBeginTime != null" >
        action_begin_time = #{actionBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionEndTime != null" >
        action_end_time = #{actionEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hostName != null" >
        host_name = #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="clientServerTtl != null" >
        client_server_TTL = #{clientServerTtl,jdbcType=VARCHAR},
      </if>
      <if test="clientServerDelay != null" >
        client_server_delay = #{clientServerDelay,jdbcType=VARCHAR},
      </if>
      <if test="datasetName != null" >
        dataset_name = #{datasetName,jdbcType=VARCHAR},
      </if>
      <if test="datasetType != null" >
        dataset_type = #{datasetType,jdbcType=VARCHAR},
      </if>
      <if test="containerName != null" >
        container_name = #{containerName,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null" >
        container_type = #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="containerId != null" >
        container_id = #{containerId,jdbcType=VARCHAR},
      </if>
      <if test="containerVersion != null" >
        container_version = #{containerVersion,jdbcType=VARCHAR},
      </if>
      <if test="owningCompany != null" >
        owning_company = #{owningCompany,jdbcType=VARCHAR},
      </if>
      <if test="owningGroup != null" >
        owning_group = #{owningGroup,jdbcType=VARCHAR},
      </if>
      <if test="owningUser != null" >
        owning_user = #{owningUser,jdbcType=VARCHAR},
      </if>
      <if test="crossCompanyView != null" >
        cross_company_view = #{crossCompanyView,jdbcType=VARCHAR},
      </if>
      <if test="crossDepartmentView != null" >
        cross_department_view = #{crossDepartmentView,jdbcType=VARCHAR},
      </if>
      <if test="secretFileView != null" >
        secret_file_view = #{secretFileView,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szdeepwise.bydtcmonitor.entity.SceneMytcOpenDataset" >
    update scene_mytc_open_dataset
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=VARCHAR},
      employee_group = #{employeeGroup,jdbcType=VARCHAR},
      employee_role = #{employeeRole,jdbcType=VARCHAR},
      employee_project = #{employeeProject,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=INTEGER},
      action_begin_time = #{actionBeginTime,jdbcType=TIMESTAMP},
      action_end_time = #{actionEndTime,jdbcType=TIMESTAMP},
      host_name = #{hostName,jdbcType=VARCHAR},
      IP = #{ip,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      client_server_TTL = #{clientServerTtl,jdbcType=VARCHAR},
      client_server_delay = #{clientServerDelay,jdbcType=VARCHAR},
      dataset_name = #{datasetName,jdbcType=VARCHAR},
      dataset_type = #{datasetType,jdbcType=VARCHAR},
      container_name = #{containerName,jdbcType=VARCHAR},
      container_type = #{containerType,jdbcType=VARCHAR},
      container_id = #{containerId,jdbcType=VARCHAR},
      container_version = #{containerVersion,jdbcType=VARCHAR},
      owning_company = #{owningCompany,jdbcType=VARCHAR},
      owning_group = #{owningGroup,jdbcType=VARCHAR},
      owning_user = #{owningUser,jdbcType=VARCHAR},
      cross_company_view = #{crossCompanyView,jdbcType=VARCHAR},
      cross_department_view = #{crossDepartmentView,jdbcType=VARCHAR},
      secret_file_view = #{secretFileView,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>